// Generated by Dagger (https://dagger.dev).
package br.com.matuki.radiobrowser.shared;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RadioBrowserService_MembersInjector implements MembersInjector<RadioBrowserService> {
  private final Provider<RadioRepository> radioRepositoryProvider;

  public RadioBrowserService_MembersInjector(Provider<RadioRepository> radioRepositoryProvider) {
    this.radioRepositoryProvider = radioRepositoryProvider;
  }

  public static MembersInjector<RadioBrowserService> create(
      Provider<RadioRepository> radioRepositoryProvider) {
    return new RadioBrowserService_MembersInjector(radioRepositoryProvider);
  }

  @Override
  public void injectMembers(RadioBrowserService instance) {
    injectRadioRepository(instance, radioRepositoryProvider.get());
  }

  @InjectedFieldSignature("br.com.matuki.radiobrowser.shared.RadioBrowserService.radioRepository")
  public static void injectRadioRepository(RadioBrowserService instance,
      RadioRepository radioRepository) {
    instance.radioRepository = radioRepository;
  }
}
